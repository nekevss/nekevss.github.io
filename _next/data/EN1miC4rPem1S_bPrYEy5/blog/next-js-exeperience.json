{"pageProps":{"meta":{"title":"Next.js Blog Experience","date":"8/4/2023"},"content":"<p>So I'll be honest, I'm a bit late to the game when it comes to Next.js. Just about everyone is already moving on to the\n<code>app</code> directory, and I'm still here working in the <code>page</code> directory.</p>\n<p>I thought I'd start writing this blog involving my experience. Why? Well because I need an extra post in my blog to test\nwith, but also because the experience itself has been interesting...</p>\n<h3>Expectations</h3>\n<p>To be frank, I may have chosen something that was much more heavyweight then I intended. I have a project that\nI want to complete in mind, but I realized that I would need a personal dev website -- something I had personally\nfelt nonbeneficial -- to use as a staging ground. My goal was to put together something rather quick and\nlightweight, but the entire process turned out to be a little more involved than that.</p>\n<p>It's worth noting: I literally had just been working on a project using <code>docusaurus</code> as a framework, which comes\nwith many tools and utilities built-in. It was simple and felt fairly familiar with any changes needing to be made\ndone in React.</p>\n<p>But Next.js was a whole new way to approach thinking about putting together a site. All of a sudden I was faced\nwith examples referencing <code>getStaticProps</code>and <code>getStaticPaths</code> that featured lovely imported functions that had no\nfurther explaining. And naturally, I spiralled a bit with thought's like: \"what the heck is a layout?\", \"Isn't this\nthing suppose to involve React somehow?\", \"Okay, I see a slug. Wait, where the heck is this <code>getBlogBySlug</code> function\".\nOr chief among these: when the hell did web development become so complicated.</p>\n<h3>And then some time passed</h3>\n<p>Of course, as I started to work my way through creating this site, everything started to click one by one. After that\neverything resolved itself perfect and there were no more problems. The end.</p>\n<p>That's not the actual case, but I have to wrap this blog up, because I would like to actually deploy this site.</p>\n<p>There are some genuine cases where Next.js seems like it may be relevant. I'd imagine if I were working for a business\nand had to build a more complex site, then I 100% understand the hype. After the learning curve, some the logic and\napproach started to make sense. But it also kept running aggressively and almost unavoidably into TypeScript.</p>\n<p>To be frank, there were entire aspects of Next.js and Layouts that I didn't really get into. Why? Because I wanted to\nput together something small and quick, and the Next.js/TypeScript/Layouts combination seemed like exactly the opposite\nof quick. And quite frankly, the clean documentation Vercel has put together for Next.js and Layouts only applies if\nyou are working in JavaScript.</p>\n<h2>Outro/General Thoughts</h2>\n<p>I would like to come back to Next.js. I mean, I'll have to come back to maintenance this blog one day. There's a lot\nhere that I like and there's a lot here that feels good. But at the same time, there is also a lot here that feels like\noverkill and programming for programming's sake.</p>"},"__N_SSG":true}